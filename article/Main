\documentclass[12pt]{article}
\usepackage{amsmath}
\usepackage{breakurl}
\usepackage{polski}
\usepackage[utf8]{inputenc}

% listings
\usepackage{listings}
\usepackage{color}

\title{Comparation of execution time sort algorithms implementations in C\\
Counting sort and Bucket sort}
\author{
	  Pelczar Piotr\\
	  \small{\texttt{piotpel817@student.polsl.pl}}
	}
\usepackage{datetime}
\newdate{date}{08}{03}{2014}
\date{\displaydate{date}}
 
\begin{document}
\maketitle
 
\begin{abstract}
This paper describes and compares counting sort and bucket sort algorithms implementations written in C language.
The main doubt is what is the impact of pointers operations in \emph{bucket sort} relatively to single operations on arrays
in \emph{counting sort}.
\end{abstract}

\section{Introduction}
\label{sec:intro}

This paper describes computational complexity comparation of two sorting algorithms based on indexing keys: \emph{bucket sort} and \emph{counting sort}. This is specific class of algorithms, which implicts some constraints on sorting keys. Keys are indicies of arrays in implemetations so in special cases the key have to be positive whole number between 0 and max integer range (0..65536) depends on platform. Both algorithms have simmilar linear computational complexity.

Bucket sort creates array of one-way list of elements (a.k.a. \emph{buckets}), which is merged at the end. This behaviour requires pointer operations\cite{cormen}.

Counting sort creates an array that represents counts of keys, and next the prefix-sum is defined, which describes how many lower keys there are before each key\cite{cormen}. That allows to simply insert keys in proper place. Algorithm is stable\footnote{Positions of items are not relatively changed after algorithm iteration.}.

Both of algoritmhs has been implemented in C language.

\section{Implementation}
\subsection{Bucket sort}

Based on pseudocode\cite{czech}.

%\lstinputlisting{../code/sort_algorithms/bucket_sort.c}


\subsection{Counting sort}

Based on pseudocode\cite{czech}.

DEF

\begin{thebibliography}{9}

\bibitem{cormen}
  Thomas H. Cormen,
  \emph{Introduction To Algorithms}.
  The MIT Press,
  2nd Edition,
  2003.

\bibitem{czech}
  Zbigniew J. Czech,
  \emph{Algorytmy i struktury danych - Materiały dydaktyczne}.
  Politechnika ≈ölƒÖska, Instytut Informatyki,
  2011.
  ftp://sun.aei.polsl.pl/pub/zjc/asd.pdf [\emph{Retreived on 2013-03-08}]

\end{thebibliography}
 
\end{document}